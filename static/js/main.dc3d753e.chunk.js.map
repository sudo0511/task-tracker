{"version":3,"sources":["components/AddTask.js","components/Footer.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","taskInput","setText","dayInput","setDay","reminderInput","setReminder","class","onSubmit","e","preventDefault","alert","type","id","value","onChange","target","checked","currentTarget","Footer","to","Button","text","onclick","color","onClick","style","backgroundColor","className","Header","title","showBtn","location","useLocation","pathname","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","day","Tasks","tasks","map","About","App","addTaskToggle","setaddTaskToggle","setTasks","useEffect","getTasks","a","fetchTasks","taskData","fetch","request","json","response","getTask","deleteTask","method","filter","taskToToggleReminder","updatedTask","headers","body","JSON","stringify","req","res","addTask","newtask","data","path","element","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc3d753e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [taskInput, setText] = useState(\"\");\r\n  const [dayInput, setDay] = useState(\"\");\r\n  const [reminderInput, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!taskInput) {\r\n      alert(\"Please enter a task to add new task\");\r\n      return;\r\n    }\r\n    onAdd({ taskInput, dayInput, reminderInput });\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <div class=\"mx\">\r\n      <form onSubmit={onSubmit}>\r\n        <div class=\"my-1\">\r\n          <label class=\"form-label\">Task</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"task-detail\"\r\n            class=\"form-control\"\r\n            value={taskInput}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"my-1\">\r\n          <label class=\"form-label\">Date and Time</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"date-time-detail\"\r\n            class=\"form-control\"\r\n            value={dayInput}\r\n            onChange={(e) => {\r\n              setDay(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"my-1 pt-1 mydiv\">\r\n          <div class=\"ms-3 form-switch form-check\">\r\n            <label class=\"form-check-label\">Set Reminder</label>\r\n            <input\r\n              class=\"form-check-input form-check-control\"\r\n              type=\"checkbox\"\r\n              checked={reminderInput}\r\n              value={reminderInput}\r\n              onChange={(e) => {\r\n                setReminder(e.currentTarget.checked);\r\n              }}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Save Task\" class=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <b>Copyright &copy; 2021</b>\r\n      <br />\r\n      <Link to=\"/about\">About</Link>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ text, onclick, color }) => {\r\n  return (\r\n    <button\r\n      onClick={onclick}\r\n      style={{ backgroundColor: color, color: \"white\" }}\r\n      className=\"btn btn-x\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Header = ({ title, onAdd, showBtn }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <header>\r\n      <h1>{title}</h1>\r\n      {location.pathname === \"/\" && (\r\n        <Button\r\n          onclick={onAdd}\r\n          color={showBtn ? \"red\" : \"green\"}\r\n          text={showBtn ? \"Close\" : \"Add\"}\r\n        />\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  //for default props if no props have been passsed\r\n  title: \"Task Tracker\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  //for setting type of props, so if a number is passsed in prop it will render but throw an invalid type error\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  // console.log(task);\r\n  return (\r\n    <div\r\n      className={`card my-2 py-1 card-space ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <strong>{task.text}</strong>\r\n      <p>{task.day}</p>\r\n      <FaTimes className=\"icon-ele\" onClick={() => onDelete(task.id)} />\r\n      {/* <span className=\"span-ele\">‚ùå</span> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h6>Version 1.0.0</h6>\r\n      <Link to=\"/\">Go Back</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState, useEffect } from \"react\"; //useState is like a hook by which we can use state in functional components\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [addTaskToggle, setaddTaskToggle] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskData = await fetchTasks();\n      setTasks(taskData);\n    };\n    getTasks();\n  }, []);\n\n  //fetch all task data from json-server\n  const fetchTasks = async () => {\n    const request = await fetch(\"http://localhost:5000/tasks\");\n    const response = await request.json();\n    return response;\n  };\n\n  //fetch specific task from json-server\n  const getTask = async (id) => {\n    const request = await fetch(`http://localhost:5000/tasks/${id}`);\n    const response = await request.json();\n    return response;\n  };\n\n  //delete a task\n  const deleteTask = async (id) => {\n    //to delete specific task from server\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //toggle reminder\n  const reminder = async (id) => {\n    const taskToToggleReminder = await getTask(id);\n    const updatedTask = {\n      ...taskToToggleReminder,\n      reminder: !taskToToggleReminder.reminder,\n    };\n\n    const req = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedTask),\n    });\n    const res = await req.json();\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: res.reminder } : task\n      )\n    );\n  };\n\n  //add new task\n  const addTask = async (newtask) => {\n    const { taskInput: text, dayInput: day, reminderInput: reminder } = newtask;\n    const task = {\n      text,\n      day,\n      reminder,\n    };\n    const request = await fetch(`http://localhost:5000/tasks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await request.json();\n    setTasks([...tasks, data]);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setaddTaskToggle(!addTaskToggle)}\n          showBtn={addTaskToggle}\n        />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <>\n                {addTaskToggle && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={reminder}\n                  />\n                ) : (\n                  \"No tasks to show\"\n                )}\n              </>\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}